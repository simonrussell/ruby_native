Class

- no outer locals are available

Method

- no outer locals are available

For/while/if

- outer scope is used -- if variables are defined inside the block, they are available after completion of the block
- loop variables are defined in the scope, so:

  for i in [1,2,3]
  end
  defined?(i)  # will be true  
Block (e.g. each { |x| })

- nested inner scope created, which references outer scope -- variables from outer scope will be touched (never hidden), but new vars
  defined inside won't be available outside
- args act as local variables, so:

  x = 1
  [1,2,3].each { |x| }
  x == 3    # will be true

- however, if args aren't the same name as an outer var, will not be defined in outer scope, so:

  [1,2,3].each { |x| }
  !defined(x)   # x won't be defined


